# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Game-Netease
# This file is distributed under the same license as the airtest package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: airtest \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-12-08 11:34+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../README.rst:2
msgid "Airtest"
msgstr ""

#: ../../README.rst:4
msgid "Automated Testing Framework"
msgstr ""

#: ../../README.rst:7
msgid "Getting Started"
msgstr ""

#: ../../README.rst:9
msgid ""
"Airtest is an automated testing framework with main focus on games, "
"however it can be used for other native applications as well. Currently, "
"Windows and Android operating systems are supported. Support for iOS "
"comes in near future."
msgstr ""

#: ../../README.rst:14
msgid ""
"Airtest framework is based on image recognition technology and provides "
"cross-platform APIs that allows to install application, perform simulated"
" input, make assertions, and so forth. It also generates the report when "
"testing is finished."
msgstr ""

#: ../../README.rst:19
msgid ""
"**AirtestIDE** is an out of the box GUI tool that helps to create and "
"record test cases in the user-friendly way. AirtestIDE provides QA with "
"entire production workflow: ``record -> replay -> report``"
msgstr ""

#: ../../README.rst:24
msgid "Installation"
msgstr ""

#: ../../README.rst:26
msgid "This section describes how to install Airtest test framework."
msgstr ""

#: ../../README.rst:29
msgid "System Requirements"
msgstr ""

#: ../../README.rst:31
msgid "Operating System:"
msgstr ""

#: ../../README.rst:33
msgid "Windows"
msgstr ""

#: ../../README.rst:34
msgid "MacOS X"
msgstr ""

#: ../../README.rst:35
msgid "Linux"
msgstr ""

#: ../../README.rst:37
msgid "Python2.7 & Python3.3+"
msgstr ""

#: ../../README.rst:40
msgid "Installing the python package"
msgstr ""

#: ../../README.rst:42
msgid ""
"Airtest package can be installed directly from Git repository. Use "
"``pip`` to manage installation of all python dependencies and package "
"itself."
msgstr ""

#: ../../README.rst:54
msgid ""
"Use ``-e`` here to install airtest in develop mode since this repo is in "
"rapid development. Then you can upgrade the repo with ``git pull`` later."
msgstr ""

#: ../../README.rst:60
msgid "Documentation"
msgstr ""

#: ../../README.rst:62
msgid "For now please clone this repo and open ``docs-release/index.html``."
msgstr ""

#: ../../README.rst:64
msgid ""
"Online docs will be available on readthedocs when this project is "
"released."
msgstr ""

#: ../../README.rst:69
msgid "Basic Usage"
msgstr ""

#: ../../README.rst:71
msgid ""
"Airtest provides simple APIs that are platform independent. This section "
"describes how to create simple API-specific test scenario which does the "
"following:"
msgstr ""

#: ../../README.rst:75
msgid "connects to local android device with ``adb``"
msgstr ""

#: ../../README.rst:76
msgid "installs the ``apk`` application"
msgstr ""

#: ../../README.rst:77
msgid "runs application and takes the screenshot"
msgstr ""

#: ../../README.rst:78
msgid "performs several user operations (touch, swipe, keyevent)"
msgstr ""

#: ../../README.rst:79
msgid "uninstalls application"
msgstr ""

#: ../../README.rst:100
msgid ""
"For more detailed info, please refer to full `Airtest Python API "
"reference`_ or take a look at `API code`_"
msgstr ""

#: ../../README.rst:105
msgid "Trying samples"
msgstr ""

#: ../../README.rst:107
msgid ""
"Airtest also contains the samples using this library in several "
"scenarios. All samples can be found in ``playground`` directory in cloned"
" repository."
msgstr ""

#: ../../README.rst:113
msgid "Running from CLI"
msgstr ""

#: ../../README.rst:114
msgid ""
"Airtest can be run from command line interface as well. All test cases, "
"test code and image templates must be placed in one directory with `.owl`"
" suffix. The easiest way to create and record the test cases is to use "
"GUI **Airtest IDE**."
msgstr ""

#: ../../README.rst:116
msgid ""
"The biggest advantage of using the Airtest CLI is the possibility to "
"execute the test cases and test scenarios on different host machine "
"without using IDE itself. Connections to devices are specified by command"
" line arguments, i.e. the test code is platform independent and one code,"
" test cases, scenarios can be used for Android, Windows or iOS devices as"
" well."
msgstr ""

#: ../../README.rst:118
msgid ""
"Following examples demonstrate the basic usage of airtest framework from "
"CLI. For more detailed info, refer to provided samples of test cases and "
"code: ```airtest/playground/test_blackjack.owl/```"
msgstr ""

#: ../../README.rst:122
msgid "run test case"
msgstr ""

#: ../../README.rst:152
msgid "generate html report"
msgstr ""

#: ../../README.rst:186
msgid "get test case info"
msgstr ""

