# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Game-Netease
# This file is distributed under the same license as the airtest package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: airtest \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-28 21:00+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../wiki/device/android_zh.md:1
msgid "Android设备连接方法与常见代码示例"
msgstr ""

#: ../../wiki/device/android_zh.md:3
msgid "English version"
msgstr ""

#: ../../wiki/device/android_zh.md:5
msgid "Android手机连接"
msgstr ""

#: ../../wiki/device/android_zh.md:7
msgid "若使用AirtestIDE进行手机连接，请参考文档"
msgstr ""

#: ../../wiki/device/android_zh.md:9
msgid "若不打算使用AirtestIDE，可以参考以下步骤："
msgstr ""

#: ../../wiki/device/android_zh.md:11
msgid "打开手机中的 开发者选项 , 以及 允许USB调试"
msgstr ""

#: ../../wiki/device/android_zh.md:12
msgid "使用USB连上手机后，能够使用adb devices命令看到设备，参考使用ADB查看手机是否成功连接"
msgstr ""

#: ../../wiki/device/android_zh.md:13
msgid "在代码和命令行中，使用手机序列号连接手机，参见在代码中使用手机"
msgstr ""

#: ../../wiki/device/android_zh.md:16
msgid "使用ADB查看手机是否成功连接"
msgstr ""

#: ../../wiki/device/android_zh.md:18
msgid "adb是谷歌官方推出的Android命令行工具，可以让我们跟设备进行通信。（感兴趣的话，请参考：官方地址。）"
msgstr ""

#: ../../wiki/device/android_zh.md:20
msgid "我们已经在airtest\\airtest\\core\\android\\static\\adb目录下，存放了各平台的adb可执行文件，大家无需下载也可以使用。"
msgstr ""

#: ../../wiki/device/android_zh.md:22
msgid ""
"以windows为例，可以先使用终端进入到adb.exe所在的目录下（在airtest\\airtest\\core\\android\\static\\adb\\windows目录下shift+右键打开命令行终端），然后执行adb"
" devices命令行："
msgstr ""

#: ../../wiki/device/android_zh.md:33
msgid ""
"在mac中，可以访问airtest/core/android/static/adb/mac目录下，运行 ./adb "
"devices，若提示adb没有可执行权限，可以运行chmod +x adb为它添加可执行权限。"
msgstr ""

#: ../../wiki/device/android_zh.md:35
msgid "在上面这个例子中，可以看到当前连接的3台Android设备，状态为device就是正常在线"
msgstr ""

#: ../../wiki/device/android_zh.md:36
msgid "如果设备状态为unauthorized，请在手机上弹出的允许USB调试菜单中点击同意"
msgstr ""

#: ../../wiki/device/android_zh.md:37
msgid "如果看不到设备名称，可能需要在PC上安装手机对应的官方驱动"
msgstr ""

#: ../../wiki/device/android_zh.md:39
msgid "手机连接遇到问题"
msgstr ""

#: ../../wiki/device/android_zh.md:41
msgid "由于手机对应的厂商和型号各不相同，可能在连接过程中会遇到各种各样的问题，请参考Android连接常见问题"
msgstr ""

#: ../../wiki/device/android_zh.md:43
msgid "在代码中使用手机"
msgstr ""

#: ../../wiki/device/android_zh.md:45
msgid "确认手机能够成功连接后，我们能够在adb devices命令行的结果中看到手机的设备序列号："
msgstr ""

#: ../../wiki/device/android_zh.md:54
msgid "上面的c2b1c2a7就是手机的设备序列号，我们用以下格式的字符串来定义一台手机："
msgstr ""

#: ../../wiki/device/android_zh.md:60
msgid "其中："
msgstr ""

#: ../../wiki/device/android_zh.md:62
msgid "adbhost是adb server所在主机的ip，默认是本机，也就是localhost或127.0.0.1"
msgstr ""

#: ../../wiki/device/android_zh.md:63
msgid "adb port默认是5037"
msgstr ""

#: ../../wiki/device/android_zh.md:64
msgid "serialno是android手机的序列号，例如刚才的c2b1c2a7"
msgstr ""

#: ../../wiki/device/android_zh.md:66
msgid "以下是一些示例："
msgstr ""

#: ../../wiki/device/android_zh.md:77
msgid "根据Android:///字符串连接手机"
msgstr ""

#: ../../wiki/device/android_zh.md:79
msgid "当我们使用命令行运行脚本时，可以使用--device Android:///来为它指定脚本运行的Android设备，例如："
msgstr ""

#: ../../wiki/device/android_zh.md:85
msgid "除此之外，当我们想在代码里连接手机时，可以使用connect_device接口："
msgstr ""

#: ../../wiki/device/android_zh.md:92
msgid "这两种方式只需要选择其中一种，基本上都能满足我们连接设备的需求。"
msgstr ""

#: ../../wiki/device/android_zh.md:95
msgid "一些特殊参数"
msgstr ""

#: ../../wiki/device/android_zh.md:97
msgid "部分特殊设备在连接时可能会出现黑屏的情况，例如一些模拟器，我们可以额外添加cap_method=JAVACAP的参数来强制指定屏幕截图方式为JAVACAP:"
msgstr ""

#: ../../wiki/device/android_zh.md:104
msgid "除此之外，我们还有另外两个参数，分别是用于指定设备画面旋转模式的ori_method=ADBORI，以及指定点击画面方式为ADB指令点击的touch_method=ADBTOUCH。"
msgstr ""

#: ../../wiki/device/android_zh.md:106
msgid "大部分情况下，我们无需指定这些参数，只有在一些特殊的Android设备（例如部分特殊型号的平板）上，使用默认参数无法连接时，才需要加入额外的参数："
msgstr ""

#: ../../wiki/device/android_zh.md:113
msgid "注意：命令行中如果有出现 ^ < > | & 这些字符，可能都需要转义才能生效。"
msgstr ""

#: ../../wiki/device/android_zh.md:115
msgid "因此如果连接字符串中需要写 && 时，在windows下需要改写成 ^&^& ，添加一个 ^ 符号进行转义，在mac下则需要添加\\进行转义："
msgstr ""

#: ../../wiki/device/android_zh.md:123
msgid "Android接口调用"
msgstr ""

#: ../../wiki/device/android_zh.md:125
msgid "所有在airtest.core.api中定义的接口，都可以在Android平台上使用，直接在脚本中调用即可："
msgstr ""

#: ../../wiki/device/android_zh.md:136
msgid "可以查阅airtest.core.api文档获得API列表。"
msgstr ""

#: ../../wiki/device/android_zh.md:139
msgid "Android设备接口"
msgstr ""

#: ../../wiki/device/android_zh.md:141
msgid ""
"除了在airtest.core.api中提供的跨平台接口之外，Android设备对象还有很多内置的接口可以调用，我们可以在airtest.core.android.android"
" module这个文档中查阅到Android设备对象拥有的方法，然后像这样调用："
msgstr ""

#: ../../wiki/device/android_zh.md:149
msgid "ADB指令调用"
msgstr ""

#: ../../wiki/device/android_zh.md:151
msgid "利用Android设备接口，我们可以这样调用adb指令："
msgstr ""

#: ../../wiki/device/android_zh.md:166
msgid "Android常见问题与代码示例"
msgstr ""

#: ../../wiki/device/android_zh.md:168
msgid "Android模拟器连接"
msgstr ""

#: ../../wiki/device/android_zh.md:170
msgid "模拟器与真机的连接方式类似，需要进行以下步骤："
msgstr ""

#: ../../wiki/device/android_zh.md:172
msgid "打开模拟器上的开发者选项，并勾选允许USB调试。部分模拟器可能需要找到 设置-关于手机 点击多次后才能打开开发者选项"
msgstr ""

#: ../../wiki/device/android_zh.md:173
msgid "使用adb连上对应的端口号，例如输入adb connect 127.0.0.1:62001，其中7555是模拟器对应的端口号，每个品牌模拟器不相同"
msgstr ""

#: ../../wiki/device/android_zh.md:174
msgid "可以使用代码Android://127.0.0.1:5037/127.0.0.1:62001?cap_method=JAVACAP连上对应的模拟器"
msgstr ""

#: ../../wiki/device/android_zh.md:176
msgid "注意要点："
msgstr ""

#: ../../wiki/device/android_zh.md:178
msgid "大部分模拟器无法使用默认参数连接，必须要指定cap_method=JAVACAP"
msgstr ""

#: ../../wiki/device/android_zh.md:179
msgid "各品牌模拟器的端口可以查阅Android模拟器连接"
msgstr ""

#: ../../wiki/device/android_zh.md:181
msgid "连续滑动"
msgstr ""

#: ../../wiki/device/android_zh.md:183
msgid "我们提供了一些滑动方面的接口，方便大家进行更复杂的操作："
msgstr ""

#: ../../wiki/device/android_zh.md:192
msgid "其中，swipe_along可以连续不断地划过一系列坐标点，是最常用的一个接口。"
msgstr ""

#: ../../wiki/device/android_zh.md:194
msgid "自定义滑动"
msgstr ""

#: ../../wiki/device/android_zh.md:196
msgid "在airtest.core.android.touch_methods.base_touch中，定义了4个动作事件："
msgstr ""

#: ../../wiki/device/android_zh.md:198
msgid "DownEvent(coordinates, contact=0, pressure=50) 手指按下"
msgstr ""

#: ../../wiki/device/android_zh.md:199
msgid "UpEvent(contact=0) 手指抬起"
msgstr ""

#: ../../wiki/device/android_zh.md:200
msgid "MoveEvent(coordinates, contact=0, pressure=50) 滑动到某个坐标"
msgstr ""

#: ../../wiki/device/android_zh.md:201
msgid "SleepEvent(seconds) 等待"
msgstr ""

#: ../../wiki/device/android_zh.md:203
msgid "上述4个动作中，contact参数默认为0，代表了第一根手指，如果传入1，就可以定义第二根手指的动作，这样就能实现双指的复杂操作了。"
msgstr ""

#: ../../wiki/device/android_zh.md:205
msgid "pressure=50定义了按下时的压力，默认为50。"
msgstr ""

#: ../../wiki/device/android_zh.md:207
msgid ""
"例如touch接口，实际上是由[DownEvent, SleepEvent, "
"UpEvent]三个动作组成的，理论上组合这些动作，能够自定义非常复杂的点击滑动操作。"
msgstr ""

#: ../../wiki/device/android_zh.md:210
msgid "例如这是一个双指轻点屏幕的例子："
msgstr ""

#: ../../wiki/device/android_zh.md:224
msgid "在上面的示例代码中，先在(100, 100)的坐标按下第一个手指，在(200, 200)按下第二个手指，等待一秒后再分别抬起两个手指。"
msgstr ""

#: ../../wiki/device/android_zh.md:226
msgid "还可以加入MoveEvent来实现更丰富的操作，例如一个普通的swipe是这样实现的："
msgstr ""

#: ../../wiki/device/android_zh.md:240
msgid "在此基础上进行改进，可以实现更多复杂操作，例如长按2秒-滑动到某个位置："
msgstr ""

#: ../../wiki/device/android_zh.md:256
msgid "更多示例，请参考airtest/playground/android_motionevents.py。"
msgstr ""

#: ../../wiki/device/android_zh.md:258
msgid "Debug tips"
msgstr ""

#: ../../wiki/device/android_zh.md:260
msgid "你可以打开手机设置-开发者选项-显示触摸位置来调试模拟输入的操作，这样做能看到每次点击的位置。"
msgstr ""

#: ../../wiki/device/android_zh.md:263
msgid "在运行脚本过程中录屏"
msgstr ""

#: ../../wiki/device/android_zh.md:265
msgid "Android手机支持在运行脚本过程中对屏幕进行录制，在运行脚本的命令行中加入--recording参数即可："
msgstr ""

#: ../../wiki/device/android_zh.md:271
msgid "运行完毕后，可以在指定的log目录中找到录制完毕的mp4文件。"
msgstr ""

#: ../../wiki/device/android_zh.md:273
msgid "如果只传了--recording参数，默认将会使用recording_手机序列号.mp4来命名录屏文件"
msgstr ""

#: ../../wiki/device/android_zh.md:274
msgid "如果指定了文件名--recording test.mp4，且超过一台手机，就命名为 手机序列号_test.mp4"
msgstr ""

#: ../../wiki/device/android_zh.md:275
msgid "如果指定了文件名--recording test.mp4，且只有一台手机，就命名为 test.mp4"
msgstr ""

#: ../../wiki/device/android_zh.md:276
msgid "注意传入的文件名必须以mp4作为结尾"
msgstr ""

#: ../../wiki/device/android_zh.md:277
msgid "默认录屏文件最长为1800秒，如果需要录制更长时间，需要手动在代码中调用录屏接口"
msgstr ""

#: ../../wiki/device/android_zh.md:279
msgid "如果在代码中调用录屏接口，能够控制录屏时的清晰度和时长，文档参见Android.start_recording。"
msgstr ""

#: ../../wiki/device/android_zh.md:281
msgid "例如，以最低清晰度录制一段30秒的视频，并导出到当前目录下的test.mp4："
msgstr ""

#: ../../wiki/device/android_zh.md:292
msgid "bit_rate_level用于控制录屏的清晰度，取值范围是1-5，bit_rate_level=5清晰度最高，但是占用的硬盘空间也会更大。"
msgstr ""

#: ../../wiki/device/android_zh.md:294
msgid "或者设置参数max_time=30，30秒后将自动停止录屏："
msgstr ""

#: ../../wiki/device/android_zh.md:302
msgid "max_time默认值为1800秒，所以录屏最大时长是半小时，可以修改它的值以获得更长时间的录屏："
msgstr ""

#: ../../wiki/device/android_zh.md:310
msgid "更多参考教程和文档"
msgstr ""

#: ../../wiki/device/android_zh.md:312
msgid "如何在Android手机上进行自动化测试"
msgstr ""

#: ../../wiki/device/android_zh.md:313
msgid "Android连接常见问题"
msgstr ""

#~ msgid "Android设备连接方法与常见问题"
#~ msgstr ""

#~ msgid "Android常见问题"
#~ msgstr ""

#~ msgid "adb是谷歌官方推出的Android命令行工具，可以让我们跟设备进行通信，官方地址。"
#~ msgstr ""

#~ msgid "我们在airtest\\airtest\\core\\android\\static\\adb目录下，存放了各平台的adb可执行文件，大家无需额外下载也可以使用。"
#~ msgstr ""

